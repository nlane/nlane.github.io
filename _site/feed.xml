<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-11-08T22:43:40-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Natalie’s Little Theorems</title><subtitle>A tech blog with a math twist!</subtitle><entry><title type="html">Imposter Syndrome</title><link href="http://localhost:4000/2018/11/08/impostersyndrome.html" rel="alternate" type="text/html" title="Imposter Syndrome" /><published>2018-11-08T00:00:00-05:00</published><updated>2018-11-08T00:00:00-05:00</updated><id>http://localhost:4000/2018/11/08/impostersyndrome</id><content type="html" xml:base="http://localhost:4000/2018/11/08/impostersyndrome.html">&lt;h1&gt;Imposter Syndrome&lt;/h1&gt;
&lt;p&gt;&lt;span class=&quot;post-meta&quot;&gt;Posted: Nov 8, 2018&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;i&gt;Imposter syndrome is normal, especially in technology. But you can overcome it!&lt;/i&gt;&lt;/h3&gt;

&lt;p&gt;Proof:
Each night before you go to bed write down three things you did well that day. Try it for a month. Try it for a week. I don’t care - just try it. Admittedly, I do not do this daily. Someone gave me this advice years ago and I find myself going through phases with this exercise. It helps me most when I’m having low self-esteem and need a boost of confidence. In other words, it helps me when I feel like my imposter syndrome is returning.&lt;/p&gt;

&lt;p&gt;A popular term these days, imposter syndrome is a feeling of inadequacy despite evidence of success. You fear being exposed as an “imposter” as you attribute your accomplishments to luck. It is very common and not unique to being in the field of technology. That being said, I believe that being in the field of technology can make these feelings more prominent and longer term.&lt;/p&gt;

&lt;div class=&quot;imposter-contain&quot;&gt;
&lt;br /&gt;&lt;img class=&quot;imposter-img&quot; src=&quot;https://imgs.xkcd.com/comics/impostor_syndrome.png&quot; /&gt;
&lt;figcaption&gt;&lt;i&gt;via xkcd&lt;/i&gt;&lt;/figcaption&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If you ask any software developer, they will tell you that a good portion of their day is spent looking at online resources. It’s not because they are bad at their jobs, it’s because technology is constantly evolving and no one can keep up. Most developers use multiple languages and libraries throughout their career. Even if you tend to use the same tools, updates within those tools force you to relearn them as you go. This is why half of a developers time could be spent learning and problem solving rather than actively writing code.&lt;/p&gt;

&lt;p&gt;The truth is that if you’re comfortable then you’re likely falling behind. You need to push yourself to learn new technologies in order to keep up, and you need to push even further if you want to get ahead. This is absolutely daunting. This perception of feeling behind can easily foster a sense of incompetency as you are aware of this whole world of knowledge you don’t have. Even as you keep chasing it by learning new things, that finish line keeps moving further and further away. Sure I had success yesterday, but is that relevant today? Of course it is, but you don’t always embody that truth.&lt;/p&gt;

&lt;p&gt;So write it down. Note your accomplishments and feel good that you were able to learn something new. Even if the particular skill is obsolete tomorrow, you likely got much more out of the learning experience than just that skill. Learn to get comfortable with being uncomfortable, and do not be afraid to talk about your self-doubts. There wouldn’t be a Wikipedia page talking about “imposter syndrome” if it was not a real and common phenomenon. QED.&lt;/p&gt;</content><author><name></name></author><summary type="html">Imposter Syndrome Posted: Nov 8, 2018 Imposter syndrome is normal, especially in technology. But you can overcome it!</summary></entry><entry><title type="html">Technology and Education</title><link href="http://localhost:4000/2018/10/27/techeducation.html" rel="alternate" type="text/html" title="Technology and Education" /><published>2018-10-27T00:00:00-04:00</published><updated>2018-10-27T00:00:00-04:00</updated><id>http://localhost:4000/2018/10/27/techeducation</id><content type="html" xml:base="http://localhost:4000/2018/10/27/techeducation.html">&lt;h1&gt;Technology and Education&lt;/h1&gt;
&lt;p&gt;&lt;span class=&quot;post-meta&quot;&gt;Posted: Oct 30, 2018&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;&lt;i&gt;A greater focus on computer science in K-12 schools will lead to increased diversity in technology&lt;/i&gt;&lt;/h3&gt;

&lt;p&gt;Proof:
I still clearly remember my first day of computer science in college. I had not programmed prior to this class, however I entered with a cautious optimism as I knew I tended to do well with math and logic. But then the class began.&lt;/p&gt;

&lt;p&gt;My peers started raising their hands confidently asking about if we would be using Java or Python. After class they told stories of how they coded their calculators in middle school math because they were bored. I realized that I had falsely assumed that most of the students in this &lt;i&gt;introductory&lt;/i&gt; class would be beginners like me. I felt such envy that they were able to take AP computer science in high school. If only I had been given that chance, maybe I would not have to work twice as hard just to catch up? Only after a few weeks in the course, I found myself wanting to give up. But as the saying goes, my mama did not raise a quitter. So I fought through it and found out, once I got over the learning curve, that I was pretty good at computer science.&lt;/p&gt;

&lt;p&gt;Fast forward to today, and I am still thinking about the series of events in ones life that may lead them to sit down in a computer science college class, try an online coding course, or sign up for one of the many bootcamps offered these days. While it is quite obvious that the computer science field is composed of mostly white males, it is less obvious how we can change that. I believe that programming will remain a niche field only pursued by a mostly privileged group of students and professionals until we integrate computer science into the K-12 curriculum.&lt;/p&gt;

&lt;p&gt;By exposing younger children to programming you can prevent them from inheriting the negative stigmas often associated with computer science. When television shows and movies portray tech clubs or hackers they tend to paint an unattractive picture of “geeky” people (mostly men) with an unhealthy obsession for technology. Why not show children that computers and technology are for everyone? Allow their interest to develop before they build unhealthy and untrue biases. I think this point is especially relevant for solving the gender gap, but it’s best that I save my thoughts on that for another post.&lt;/p&gt;

&lt;p&gt;Another interesting point is that some students may not have the resources to explore technology on their own. It is wrong to assume that every child is growing up with technology at their fingertips these days. &lt;a class=&quot;link-inside-post&quot; href=&quot;http://www.pewresearch.org/fact-tank/2018/10/26/nearly-one-in-five-teens-cant-always-finish-their-homework-because-of-the-digital-divide/&quot;&gt;A recent study&lt;/a&gt;  by Pew Research showed that 25% of lower-income teenagers do not have access to a computer at home. If public schools fail to offer computer science classes, these students without computers have little to no chance of stumbling into the field on their own. The great thing about computer science is that you don’t need a computer to learn the foundational concepts. So even for schools that cannot afford laptops and for students who cannot afford an at-home computer, valuable computer science and algorithmic concepts can still be taught and practiced.&lt;/p&gt;

&lt;p&gt;About one year ago, Delaware’s Governor John Carney signed &lt;a class=&quot;link-inside-post&quot; href=&quot;http://legis.delaware.gov/BillDetail?LegislationId=25346&quot;&gt;a bill&lt;/a&gt; which requires public high schools in the state to offer at least one computer science course by the 2020 school year. While we may be years away from conducting real studies which can confirm the long-term effects of bills such as this one, we can enjoy observing the start of it.&lt;/p&gt;

&lt;p&gt;I know that adding a computer science class to public schools is not the complete solution, but it is a step in the right direction. The diversity problem in technology is not going to fix itself, and now is the time to start making changes. You hear everywhere that “technology is the future”. If this is true, then isn’t it better to let everyone have the opportunity to build our tomorrow? QED.&lt;/p&gt;</content><author><name></name></author><summary type="html">Technology and Education Posted: Oct 30, 2018 A greater focus on computer science in K-12 schools will lead to increased diversity in technology</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/2018/10/26/firstpost.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-10-26T00:00:00-04:00</published><updated>2018-10-26T00:00:00-04:00</updated><id>http://localhost:4000/2018/10/26/firstpost</id><content type="html" xml:base="http://localhost:4000/2018/10/26/firstpost.html">&lt;h1 id=&quot;welcome&quot;&gt;Welcome&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Hello world&lt;/strong&gt;, this is my first Jekyll blog post.&lt;/p&gt;

&lt;p&gt;I hope you like it!&lt;/p&gt;</content><author><name></name></author><summary type="html">Welcome</summary></entry></feed>